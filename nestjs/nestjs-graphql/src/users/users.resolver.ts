import { Mutation, Query, Resolver, Subscription } from "@nestjs/graphql";
import { PubSub } from "graphql-subscriptions";
import { User } from "./models/user.model";

const pubSub = new PubSub();

@Resolver(() => User)
export class UsersResolver {
    @Query(() => String)
    hello() {
        return "Hello, World";
    }

    @Subscription(() => String, { name: "exampleEvent" })
    subscribeToExampleEvent() {
        return pubSub.asyncIterator("exampleEvent");
    }

    @Mutation(() => String)
    callEvent() {
        pubSub.publish("exampleEvent", {
            exampleEvent: "Message generated by callEvent method",
        });

        return "Event sending.";
    }
}
